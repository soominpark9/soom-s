<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>방명록</title>

    <!-- axios cdn -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <!-- jquery cdn -->
    <script
      src="https://code.jquery.com/jquery-3.6.0.min.js"
      integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4="
      crossorigin="anonymous"
    ></script>

    <style>
      body {
        background-color: aliceblue;
      }
    </style>
  </head>
  <body>
    <form name="visitor-form">
      <fieldset>
        <legend>방명록 등록</legend>
        <input type="text" id="name" placeholder="사용자 이름" /> <br />
        <input type="text" id="comment" placeholder="방명록" /> <br />
        <div id="button-group">
          <button type="button" onclick="createVisitor();">등록</button>
        </div>
      </fieldset>
    </form>
    <br />

    <table border="1" cellspacing="0">
      <thead>
        <tr>
          <th>ID</th>
          <th>작성자</th>
          <th>방명록</th>
          <th>수정</th>
          <th>삭제</th>
        </tr>
      </thead>
      <tbody>
        <!-- data: db에서 가지고 오는 데이터 => 새로고침해도 데이터 남아있음 -->
        <% for (let i = 0; i < data.length; i++) { %>
        <tr id="tr_<%= data[i].id %>">
          <td><%= data[i].id %></td>
          <td><%= data[i].name %></td>
          <td><%= data[i].comment %></td>
          <td><button type="button">수정</button></td>
          <td>
            <button
              type="button"
              onclick="deleteVisitor(this, '<%= data[i].id %>');"
            >
              삭제
            </button>
          </td>
        </tr>
        <% } %>
        <!-- 추가되어야할 tr 위치 -> 종료태그의 앞(beforeend) -->
      </tbody>
    </table>

    <script>
      const tbody = document.querySelector("tbody");

      // 폼 [등록] 버튼 클릭시
      // - 테이블에 데이터 추가
      function createVisitor() {
        console.log("click 등록 버튼");

        // 폼 선택
        const form = document.forms["visitor-form"];
        console.dir(form);
        console.log(form.name.value); // name input 값의 value
        console.log(form.comment.value); // comment input 값의 value

        axios({
          method: "POST",
          url: "/visitor/write",
          data: {
            name: form.name.value,
            comment: form.comment.value,
          },
        })
          .then((res) => {
            console.log(res);
            console.log(res.data);
            return res.data;
          })
          .then((data) => {
            console.log(data); // {id: 8, name: 'ㅁㅁ', comment: 'ㅁㅁ'}

            const html = `
            <tr id="tr_${data.id}">
              <td>${data.id}</td>
              <td>${data.name}</td>
              <td>${data.comment}</td>
              <td><button type="button">수정</button></td>
              <td><button type="button" onclick="deleteVisitor(this, '${data.id}');">삭제</button></td>
            </tr>`;

            // 테이블에 추가된 정보를 "바로" 보여주기
            // data 객체에 담긴 값을 이용해서 tbody 태그의 자식으로 tr 한줄이 추가되는 코드
            // js: insertAdjacentHTML() -> 특정 요소에 html 코드 추가 가능
            // vs. innerHTML(): 기존 html 코드 지우고 덮어씌움
            // jquery: append()
            tbody.insertAdjacentHTML("beforeend", html); // ver.js
            // $('tbody').append(html); // ver. jquery
            cleartInput();
          });
      }
      //삭제 버튼 클릭시
      // - 테이블에서 해당 행 삭제
      function deleteVisitor(obj, id) {
        console.log("click 삭제 버튼");
        console.log(obj);
        console.log(id);

        axios({
          method: "DELETE",
          url: "/visitor/delete",
          data: {
            id: id,
          },
        })
          .then((res) => {
            console.log(res.data);
            return res.data;
          })
          .then((data) => {
            alert(data); // alert('삭제 성공!!')

            // obj: 삭제버튼 자기자신
            // obj.parentElement.parentElement.remove();
            // closest() 메서드
            obj.closest(`#tr_${id}`).remove(); // 더 간편 ver
          });
      }

      // input 초기화
      function clearInput() {
        const form = document.forms["visitor-form"];
        form.name.value = "";
        form.comment.value = "";
      }
    </script>
  </body>
</html>
